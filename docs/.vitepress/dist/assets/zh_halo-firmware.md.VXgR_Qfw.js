import{_ as a,c as l,o as s,ah as e,bs as t,bt as r,bu as p,bv as n,bw as h,bx as o}from"./chunks/framework.CqUZohul.js";const b=JSON.parse('{"title":"固件","description":"","frontmatter":{},"headers":[],"relativePath":"zh/halo-firmware.md","filePath":"zh/halo-firmware.md","lastUpdated":1757232363000,"contributors":[]}'),g={name:"zh/halo-firmware.md"};function d(k,i,c,f,C,_){return s(),l("div",null,[...i[0]||(i[0]=[e('<h1 id="固件" tabindex="-1">固件 <a class="header-anchor" href="#固件" aria-label="Permalink to “固件”">​</a></h1><h2 id="刷写-betaflight-固件" tabindex="-1">刷写 Betaflight 固件 <a class="header-anchor" href="#刷写-betaflight-固件" aria-label="Permalink to “刷写 Betaflight 固件”">​</a></h2><ul><li><p>下载并安装 <a href="https://github.com/betaflight/betaflight-configurator/releases/tag/10.10.0" target="_blank" rel="noreferrer">Betaflight Configurator</a>。</p></li><li><p>启动 Betaflight Configurator</p></li><li><p>刷写固件：</p><img src="'+t+'" id="image23"><ol><li><p>选择目标端口</p></li><li><p>点击“更新固件”进入固件刷写标签页</p></li><li><p>选择目标 “HAZERO_HALO” 和版本，出厂版本为 4.5.1[27-Jun-2024]</p></li><li><p>点击“加载固件 [在线]”以下载固件</p></li><li><p>点击“刷写固件”以刷写飞控固件</p></li></ol></li><li><p>DFU 刷写：</p><p><em>如果你与飞控失去通信，请按照以下步骤恢复通信：</em></p><ol><li><p>关闭 HALO 飞控</p></li><li><p>启用“无重启序列”，启用“全芯片擦除”</p></li><li><p>按住飞控 BOOT 按钮，插入 USB-C 连接到 PC，松开 BOOT 按钮</p></li><li><p>安装所有 STM32 驱动程序，并在需要时安装 Zadig（参见 Betaflight 手册部分）</p></li><li><p>关闭 Betaflight Configurator，重新启动 Betaflight Configurator</p></li><li><p>点击“更新固件”进入固件刷写标签页</p></li><li><p>选择目标 “HAZERO_HALO” 和版本，出厂版本为 4.5.1[27-Jun-2024]</p></li><li><p>点击“加载固件 [在线]”以下载固件</p></li><li><p>点击“刷写固件”以刷写飞控固件</p></li></ol></li></ul><h2 id="执行-cli" tabindex="-1">执行 CLI <a class="header-anchor" href="#执行-cli" aria-label="Permalink to “执行 CLI”">​</a></h2><ul><li>HDZero HALO 在线固件已经包含所需的 CLI，如果需要预定义的 CLI，请按照以下步骤操作：</li></ul><p>从 Flight Configurator 标签页下载文件 <a href="https://www.alipan.com/s/WdoCPa2odz5" target="_blank" rel="noreferrer">HDZero Download</a>，并将 HDZEROHALO_RevXYZ.zip 解压到临时目录，例如 c:\\123</p><img src="'+r+'" id="image24"><ol><li><p>切换到 Betaflight Configurator 的 CLI 标签页</p></li><li><p>点击“从文件加载”，选择文件 c:\\123\\ HDZERO_HALO.txt 用于 HDZero HALO</p></li><li><p>点击“执行”</p></li></ol><img src="'+p+'" id="image25"><ul><li>图传表未包含在 HDZero HALO 在线固件中，但可以通过以下几种方式添加：</li></ul><ol><li>当你使用 HDZero 图传与 HDZero HALO 时，</li></ol><p>图传会通过 MSP 提供此功能，图传固件需要是 1.7.0 或更高版本，或者</p><ol start="2"><li><p>使用 CLI 文件 HDZERO_HALO.txt 提供的配置，或者</p></li><li><p>使用 Betaflight Configurator 预设，搜索 HDZero 图传以找到此预设</p></li></ol><img src="'+n+'" id="image26"><img src="'+h+'" id="image27"><h2 id="刷写-elrs-固件" tabindex="-1">刷写 ELRS 固件 <a class="header-anchor" href="#刷写-elrs-固件" aria-label="Permalink to “刷写 ELRS 固件”">​</a></h2><p>HDZero Halo 出厂的 ELRS 固件版本为 Released 3.5.1，如果需要更新固件，请参考 ELRS 更新教程（<a href="https://www.expresslrs.org/quick-start/receivers/updating/" target="_blank" rel="noreferrer">典型更新步骤</a>），设备类别和设备目标如下：</p><p>设备类别：HDZero</p><p>设备目标：HDZero Halo 飞控 2.4G Gemini RX</p><p><img src="'+o+`" id="image28"><div class="page"></div></p><h2 id="可切换-9v-bec" tabindex="-1">可切换 9V BEC <a class="header-anchor" href="#可切换-9v-bec" aria-label="Permalink to “可切换 9V BEC”">​</a></h2><ul><li><p>启动 Betaflight Configurator</p></li><li><p>切换到 CLI 标签页</p></li><li><p>输入 CLI：</p></li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resource</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PINIO</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> E03</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pinio_config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pinio_box</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">save</span></span></code></pre></div>`,23)])])}const u=a(g,[["render",d]]);export{b as __pageData,u as default};
